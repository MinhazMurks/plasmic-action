import { PlatformType } from "../lib";
/**
 * Runs the search pattern through `glob` and deletes all resulting files
 * @param searchPattern - glob search query
 * @param skipPatterns - array of fragments. Skip any file contains any of the fragments
 */
export declare function deleteGlob(searchPattern: string, skipPatterns?: string[]): void;
export declare function stripExtension(filename: string, removeComposedPath?: boolean): string;
/**
 * create-next-app doesn't create next.config.js,
 * so it's safe to just write the file
 * @param absPath
 * @param projectId
 * @returns
 */
export declare function writeDefaultNextjsConfig(projectDir: string, projectId: string, loader: boolean, projectApiToken?: string, useTypescript?: boolean): Promise<void>;
export declare function writePlasmicLoaderJson(projectDir: string, projectId: string, projectApiToken: string): Promise<void>;
/**
 * - [nextjs|gatsby, loader, '/' page exists] - remove index file
 * - [nextjs|gatsby, loader, '/' Page DNE] - replace index file with Welcome page
 * - [nextjs|gatsby, codegen, '/' page exists] - remove Next.js/Gatsby index file, preserve Plasmic index
 * - [nextjs|gatsby, codegen, '/' page DNE] - replace index file with Welcome page
 * - [react, codegen ]  - replace App file with '/', Home, or Welcome page
 * @returns
 */
export declare function overwriteIndex(projectPath: string, platform: string, scheme: string): Promise<void>;
/**
 * Overwrite the README file
 * @param projectPath
 * @param platform
 * @param buildCommand
 */
export declare function overwriteReadme(projectPath: string, platform: PlatformType, buildCommand: string): Promise<void>;
export declare function ensureTsconfig(projectPath: string): Promise<void>;
export declare function wrapAppRoot(projectPath: string, platform: string, scheme: string): Promise<void>;
export declare function ifTs(ts: boolean, str: string): string;
